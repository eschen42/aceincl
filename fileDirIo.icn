
############################################################################
#
#   File:     fileDirIo.icn
#
#   Subject:  Procedures to manipulate files, directores, and their paths.
#
#   Author:   Arthur C. Eschenlauer
#
#   Date:     September 8, 2021
#
############################################################################
#
#   This file is in the public domain.
#
#   SPDX-License-Identifier: CC-PDDC
#     https://spdx.org/licenses/CC-PDDC.html
#
############################################################################
#
#   procedure alterExtension(fn, old_ex, new_ex) : s
#     Produce fn, substituting new_ex for old_ex
#
#   procedure directory_seq(name)
#     Produce name(s) that name a directory
#
############################################################################
#
#   links: regexp
#
############################################################################
$ifndef _fileDirIo_
$define _fileDirIo_

$ifndef _wora_
$error wora.icn must be included for definition of procedure wora(id)
$endif # _wora_

link regexp # for regular expressions to support alterExtension

procedure alterExtension(fn, old_ex, new_ex) #: change extension of file name
  ReCaseIndependent()
  fn ? suspend {
           tab(ReFind("[.]" || old_ex || "$"))
         } || "." || new_ex
end

# adapted from IPL proc io.icn
procedure directory_seq(name) #: suspend name(s) when a directory
  suspend (close(open(name || "/.")), name)
end

procedure cmd_separator() #: return platform-specific command separator
  $ifdef _MS_WINDOWS
    return "&"
  $else
    return ";"
  $endif
end

procedure path_separator() #: return platform-specific path separator
  $ifdef _MS_WINDOWS
    return "\\"
  $else
    return "/"
  $endif
end

# inspired by IPL proc io.icn
procedure program_dir() #: return path to directory containing program
  local i
  &progname ? every i := find(path_separator())
  if /i
    then return "."
    else return &progname[1:i]
end

$endif # _fileDirIo_
